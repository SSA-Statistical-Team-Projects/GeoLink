% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geolink_mach.R
\name{geolink_chirps}
\alias{geolink_chirps}
\title{Download and Merge monthly rainfall chirp data into geocoded surveys}
\usage{
geolink_chirps(
  time_unit = NULL,
  start_date,
  end_date,
  shp_dt = NULL,
  shp_fn = NULL,
  grid_size = NULL,
  survey_dt = NULL,
  survey_fn = NULL,
  survey_lat = NULL,
  survey_lon = NULL,
  buffer_size = NULL,
  extract_fun = "mean",
  survey_crs = 4326,
  return_raster = FALSE,
  weight_raster = NULL
)
}
\arguments{
\item{time_unit}{A character, either "month" or "annual" monthly or annual rainfall aggregates
are to be estimated}

\item{start_date}{An object of class date, must be specified like "yyyy-mm-dd"}

\item{end_date}{An object of class date, must be specified like "yyyy-mm-dd"}

\item{shp_dt}{An object of class 'sf', 'data.frame' which contains polygons or multipolygons}

\item{shp_fn}{A character, file path for the shapefile (.shp) to be read (for STATA users only)}

\item{grid_size}{A numeric, the grid size to be used in meters}

\item{survey_dt}{An object of class "sf", "data.frame", a geocoded household survey i.e.
a household survey with latitude and longitude values.}

\item{survey_fn}{A character, file path for geocoded survey (.dta format) (for STATA users only &
if use_survey is TRUE)}

\item{survey_lat}{A character, latitude variable from survey (for STATA users only &
if use_survey is TRUE)}

\item{survey_lon}{A character, longitude variable from survey (for STATA users only &
if use survey is TRUE)}

\item{buffer_size}{A numeric, the size of the buffer for \code{survey_dt} or \code{survey_fn} in meters.}

\item{extract_fun}{A character, a function to be applied in extraction of raster into the shapefile.
Default is mean. Other options are "sum", "min", "max", "sd", "skew" and "rms".}

\item{survey_crs}{A numeric, the default is 4326}

\item{return_raster}{logical, default is FALSE, if TRUE a raster will be returned ONLY. The resulting
raster is cropped to the extent of \code{shp_dt} if \code{shp_dt} is specified. Otherwise, full raster from
source is downloaded.}

\item{weight_raster}{a raster object of class \code{spatRaster} or a list of \code{spatRaster} objects}
}
\description{
Download rainfall data from the CHIRPS data at monthly/annual intervals for a specified period
The data is downloaded in raster format and combined with shapefile and/or survey data provided
by the user
}
\details{
Rainfall data is sourced from the Climate Hazards Group InfraRed Precipitation
with Station data (CHIRPS). This a 35+ year quasi-global rainfall dataset. Spanning the
entire world from 1981 to date. See https://www.chc.ucsb.edu/data/chirps for more details.
The data is extracted into a shapefile provided by user. An added service for tesselating/gridding
the shapefile is also provided for users that need this data further analytics that require
equal area zonal statistics. Shapefile estimates at the grid or native polygon level is a
permitted final output. However, a geocoded survey with rainfall estimates are the end goal
if the user also chooses. The function will merge shapefile polygons (either gridded or
native polygons) with the location of the survey units i.e. rainfall estimates for the
locations of the units within the survey will be returned. The function is also set up for
stata users and allows the user to pass file paths for the household survey \code{survey_fn}
(with the lat and long variable names \code{survey_lon} and \code{survey_lat}) as well. This is requires
a .dta file which is read in with \code{haven::read_dta()} package. Likewise, the user is permitted
to pass a filepath for the location of the shapefile \code{shp_fn} which is read in with the
\code{sf::read_sf()} function.
In addition, raster download is now possible by setting \code{return_raster} argument to \code{TRUE}. This
will only return a raster however, to carry out zonal statistics estimation, set argument to \code{FALSE}
and specify other arguments as need. See examples below.
}
\examples{

\dontrun{
\donttest{

## raster download to the extent of a shapefile
df <- geolink_chirps(time_unit = "month",
                     start_date = "2020-01-01",
                     end_date = "2020-03-01",
                     shp_dt = shp_dt[shp_dt$ADM1_PCODE == "NG001",],
                     return_raster = TRUE)

#examples of zonal statistics computation for a tesselated shapefile
df <- geolink_chirps(time_unit = "month",
                     start_date = "2020-01-01",
                     end_date = "2020-03-01",
                     shp_dt = shp_dt[shp_dt$ADM1_PCODE == "NG001",],
                     grid_size = 1000,
                     extract_fun = "mean")


### estimating how much rainfall occurred within a certain distance of a household
### assuming the user specifies the file location of a .dta file i.e. for STATA
### users who do not normally use R

temp_dir <- tempfile(fileext = ".dta")

haven::write_dta(hhgeo_dt, temp_dir) ## assuming has stored .dta file locally

df <- geolink_chirps(time_unit = "month",
                     start_date = "2020-01-01",
                     end_date = "2020-02-01",
                     survey_fn = temp_dir,
                     survey_lat = "y",
                     survey_lon = "x",
                     buffer_size = 1000,
                     extract_fun = "mean")

## examples of zonal statistics computation with weights

fpath <- system.file("extdata", "pop.tif", package = "GeoLink")
pop_raster <- terra::rast(fpath)


df <- geolink_chirps(time_unit = "month",
                     start_date = "2020-01-01",
                     end_date = "2020-03-01",
                     shp_dt = shp_dt[shp_dt$ADM1_PCODE == "NG001",],
                     grid_size = 1000,
                     extract_fun = "weighted_mean",
                     weight_raster = pop_raster)


}}


}
