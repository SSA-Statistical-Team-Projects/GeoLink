% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geolink_master.R
\name{run_geolink}
\alias{run_geolink}
\title{Master Function for Geospatial Data Extraction}
\usage{
run_geolink(
  data_type,
  start_date = NULL,
  end_date = NULL,
  iso_code = NULL,
  shp_dt = NULL,
  survey_dt = NULL,
  additional_params = list()
)
}
\arguments{
\item{data_type}{A character string specifying the type of data to extract.
Options include: "rainfall", "nightlight", "landcover", "population",
"poi", "electaccess", "elevation", "buildings", "cmip6", "cropland",
"worldclim", "opencellid", "terraclimate", "vegindex", "pollution".}

\item{start_date}{Optional. A character or date object representing the
start date for data extraction (format: "YYYY-MM-DD").}

\item{end_date}{Optional. A character or date object representing the
end date for data extraction (format: "YYYY-MM-DD").}

\item{iso_code}{Optional. A character string representing the ISO country code.}

\item{shp_dt}{Optional. A spatial dataframe (sf object) containing polygon
or multipolygon geometries for spatial filtering.}

\item{survey_dt}{Optional. A spatial dataframe (sf object) containing
survey point locations.}

\item{additional_params}{Optional. A list of additional parameters specific
to the chosen data type.}
}
\value{
A dataframe or spatial dataframe containing the extracted geospatial data.
}
\description{
A comprehensive function to extract various types of geospatial data
from multiple sources with automatic parameter suggestions.
}
\details{
This function provides a unified interface for extracting various types of
geospatial data. Upon calling the function, it automatically prints parameter
suggestions and requirements for the specified data type.
}
\examples{
\donttest{
# 1. Rainfall Data Extraction
rainfall_data <- run_geolink(
    data_type = "rainfall",
    start_date = "2020-01-01",
    end_date = "2020-12-31",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",]
)

# 2. Nighttime Lights Data Extraction
nightlight_data <- run_geolink(
    data_type = "nightlight",
    start_date = "2020-01-01",
    end_date = "2020-12-31",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",],
    additional_params = list(
        indicator = "average_masked"
    )
)

# 3. Land Cover Data Extraction
landcover_data <- run_geolink(
    data_type = "landcover",
    start_date = "2020-01-01",
    end_date = "2021-01-01",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",]
)

# 4. Population Data Extraction
population_data <- run_geolink(
    data_type = "population",
    iso_code = "NGA",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",],
    additional_params = list(
        constrained = "Y"
    )
)

# 5. Points of Interest Extraction
poi_data <- run_geolink(
    data_type = "poi",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",],
    additional_params = list(
        osm_key = "amenity",
        osm_value = "hospital"
    )
)

# 6. Electrification Access Data Extraction
elect_data <- run_geolink(
    data_type = "electaccess",
    start_date = "2018-12-31",
    end_date = "2019-12-31",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",]
)

# 7. Elevation Data Extraction
elevation_data <- run_geolink(
    data_type = "elevation",
    iso_code = "NGA",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",]
)

# 8. Buildings Data Extraction
buildings_data <- run_geolink(
    data_type = "buildings",
    iso_code = "NGA",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",],
    additional_params = list(
        version = "v1.1"
    )
)

# 9. CMIP6 Climate Model Data Extraction
cmip6_data <- run_geolink(
    data_type = "cmip6",
    start_date = "2019-01-01",
    end_date = "2019-12-31",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",],
    additional_params = list(
        scenario = "ssp245",
        desired_models = "UKESM1-0-LL"
    )
)

# 10. Cropland Data Extraction
cropland_data <- run_geolink(
    data_type = "cropland",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",],
    additional_params = list(
        source = "WorldCover"
    )
)

# 11. WorldClim Climate Data Extraction
worldclim_data <- run_geolink(
    data_type = "worldclim",
    iso_code = "NGA",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",],
    additional_params = list(
        var = "temperature",
        res = "2.5m"
    )
)

# 12. OpenCellID Data Extraction
opencellid_data <- run_geolink(
    data_type = "opencellid",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",],
    additional_params = list(
        cell_tower_file = "path/to/cell_towers.csv.gz"
    )
)

# 13. TerraClimate Data Extraction
terraclimate_data <- run_geolink(
    data_type = "terraclimate",
    start_date = "2017-01-01",
    end_date = "2017-12-31",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",],
    additional_params = list(
        var = "tmin"
    )
)

# 14. Vegetation Index Data Extraction
vegindex_data <- run_geolink(
    data_type = "vegindex",
    start_date = "2020-01-01",
    end_date = "2020-12-31",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",],
    additional_params = list(
        indicator = "NDVI"
    )
)

# 15. Pollution Data Extraction
pollution_data <- run_geolink(
    data_type = "pollution",
    start_date = "2020-01-01",
    end_date = "2020-12-31",
    shp_dt = shp_dt[shp_dt$ADM1_EN == "Abia",],
    additional_params = list(
        indicator = "no2"
    )
)
}

}
