% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init.R
\name{geolink_setup_python}
\alias{geolink_setup_python}
\title{Setup Python Environment for GeoLink}
\usage{
geolink_setup_python(force = FALSE, minimal = FALSE, verbose = TRUE)
}
\arguments{
\item{force}{Logical. If TRUE, forces reinstallation even if the environment
already exists. Default is FALSE.}

\item{minimal}{Logical. If TRUE, installs only essential packages (Python and NumPy).
If FALSE, installs full geospatial stack. Default is FALSE.}

\item{verbose}{Logical. If TRUE, displays detailed installation progress messages.
Default is TRUE.}
}
\value{
Invisible TRUE if setup succeeds, stops with error if setup fails.
}
\description{
Configures and installs the Python environment required for GeoLink's
geospatial operations. This includes installing Miniconda (if needed),
creating a conda environment, and installing necessary Python packages.
}
\details{
The function performs the following steps:
\enumerate{
\item Checks if Python environment is already initialized
\item Installs Miniconda if not present
\item Creates a conda environment named "geolink_env"
\item Installs Python packages based on the minimal parameter:
\itemize{
\item Minimal: Python 3.10, NumPy
\item Full: Adds GDAL, Rasterio, PyProj, Fiona, Shapely (platform-specific)
}
\item Activates the environment for use with reticulate
}

Platform-specific considerations:
\itemize{
\item Windows: Installs a reduced set of packages due to compatibility
\item Unix/Linux/macOS: Installs full geospatial stack
}
}
\examples{
\dontrun{
# Basic setup with full geospatial packages
geolink_setup_python()

# Minimal setup for basic operations
geolink_setup_python(minimal = TRUE)

# Force reinstallation
geolink_setup_python(force = TRUE)

# Quiet installation
geolink_setup_python(verbose = FALSE)
}

}
